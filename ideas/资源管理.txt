需求：
1.所有数据要放在内存池中
2.数据释放是全自动的
3.满足前两条的前提下保证性能

构思：
先单独创建一个HeapPool来存放资源，加载的世界的时候加载所有资源，此时使用不安全函数进行多线程写入。
在调试的时候：
使用一个字典对应每个资源的引用计数。
在发布的时候：
用ID来对应每个资源的引用计数，ID就是数组的index

代码：
需要一个resource类提供相应的获取资源的函数，内部有一个rescounter的数组记录。还要提供一个refptr类来获取load函数返回值，析构时再调用unref函数